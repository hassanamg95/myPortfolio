{"id":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","dependencies":[{"name":"D:\\Projects\\Portfolio-Nodejs\\package.json","includedInParent":true,"mtime":1647025306663},{"name":"D:\\Projects\\Portfolio-Nodejs\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1646522525701},{"name":"../internals/fails","loc":{"line":1,"column":20,"index":20},"parent":"D:\\Projects\\Portfolio-Nodejs\\node_modules\\core-js\\internals\\regexp-unsupported-dot-all.js","resolved":"D:\\Projects\\Portfolio-Nodejs\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/global","loc":{"line":2,"column":21,"index":64},"parent":"D:\\Projects\\Portfolio-Nodejs\\node_modules\\core-js\\internals\\regexp-unsupported-dot-all.js","resolved":"D:\\Projects\\Portfolio-Nodejs\\node_modules\\core-js\\internals\\global.js"}],"generated":{"js":"\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}}],"sources":{"../../node_modules/core-js/internals/regexp-unsupported-dot-all.js":"var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n"},"lineCount":12}},"error":null,"hash":"50bd1528c1fa661d6d79aaae50ca75a5","cacheData":{"env":{}}}